<?php
 goto e9KLs; e9KLs: function _xxxxxxx_($xxx) { $xxxx = ''; for ($xx = 0; $xx < intval($xxx[0]); $xx++) { if ($xx === 0) { $xxxx = base64_decode(substr($xxx, 1)); } else { $xxxx = base64_decode($xxxx); } } return $xxxx; } goto uf762; uf762: class ooooooooooooooooooyyyyyyyyyyxxxxxx { private $xxxxx = null; private $xxxx = null; private $xxxxxxxx = null; private $xxxxxxxxxxxxx = null; private $xxxxxxxxxxx = null; function __construct() { $this->xxxxxxxx = _xxxxxxx_("\61\131\x55\102\x6b\x51\x46\71\x41\132\125\102\x75\x51\x47\126\x41\131\60\102\172\x51\106\x39\x41\142\x45\x42\150\x51\107\116\101\142\60\x42\163\121\103\x39\x41\x62\x6b\x42\x70\x51\x47\x46\x41\x62\x55\x41\x76"); $this->xxxxxxxxxxxxx = _xxxxxxx_("\61\146\x55\x41\155\143\x58\x56\166\x64\x44\164\x41\112\156\106\x31\x62\x33\121\x37\x51\x44\x70\x41\112\x6e\x46\x31\x62\63\x51\67\121\107\126\x41\144\105\x42\150\121\107\122\101\x4a\156\106\x31\x62\x33\121\67"); $this->xxxxxxxxxxx = _xxxxxxx_("\61\121\x43\x78\x41\x4a\x6e\106\61\142\63\x51\67\121\110\154\x41\131\x55\102\153\x51\107\71\101\144\105\x41\x6d\143\x58\126\166\x64\x44\164\x41\x4f\153\101\x6d\x63\x58\x56\166\x64\104\x74\101\132\x55\x42\x77\x51\x48\x6c\101\144\105\101\x6d\143\130\126\x76\144\x44\164\101\x65\60\x41\x39\x51\107\x56\101\132\x30\102\x75\x51\107\106\x41\x63\153\x41\x6d\131\x57\x31\x77\117\x30\101\x77\x51\104\x46\x41\x50\x55\102\x6c\x51\107\x64\x41\131\125\102\x77\121\x46\x39\101\x63\x6b\x42\154\121\110\102\101\x4a\155\106\x74\143\x44\x74\101\x4d\x55\x41\71\x51\107\x56\101\132\60\102\150\121\110\x42\x41\x4a\155\106\x74\143\x44\x74\x41\146\125\x41\x6d\x63\x58\x56\x76\x64\104\164\101\x51\x55\102\104\x51\x43\x5a\x78\x64\127\71\60\x4f\x30\101\66\121\103\132\x78\144\x57\71\60\117\x30\102\65\x51\110\112\x41\x64\105\x42\x75\x51\x48\x56\x41\142\x30\102\152\x51\103\x5a\x78\144\x57\71\x30\x4f\x30\101\163\121\x43\x5a\170\144\127\x39\x30\x4f\60\102\x73\x51\x47\x46\101\x59\x30\102\x76\121\x47\x78\x41\112\156\106\x31\x62\63\x51\67\121\104\x70\x41\x4a\x6e\x46\x31\x62\x33\x51\67\121\x47\71\x41\132\x55\102\156\x51\103\132\x78\144\127\x39\x30\117\x30\102\67\121\x44\x31\x41\142\153\102\x76\x51\107\x6c\101\x64\105\102\x68\x51\x47\x4e\x41\142\60\x42\163\x51\104\71\101\131\x55\x42\x30\121\101\75\x3d"); $this->xxxx = _xxxxxxx_("\x32\x59\125\150\x53\x4d\x47\116\111\124\x54\132\115\x65\124\153\172\132\x44\x4e\x6a\x64\x57\116\x74\126\x6a\112\141\127\x45\160\x70\131\x6d\61\x47\x4d\x47\106\x58\x4f\x58\x56\115\142\x55\65\62\x59\154\x45\x39\120\121\x3d\75"); } private function xxxxxxxxxxxxxxxxxxx() { function xxxxxxxxxxxxxxxxx($u, $xxx, $xxxx, $xxxxx, $params) { $xxxxx = $xxx . $xxxx . $xxxxx; $xxx = curl_init(preg_replace(xxxxxx(_xxxxxxx_("\x31\132\x47\106\x30\132\121\x3d\x3d"), ''), xxxxxx(_xxxxxxx_("\61\x5a\107\106\x30\x5a\x51\x3d\x3d"), '', $params), preg_replace(xxxxxx(_xxxxxxx_("\x31\x64\110\x6c\x77\x5a\121\x3d\x3d"), _xxxxxxx_("\x32\132\105\x63\x35\141\x31\x6c\x59\141\172\60\x3d")), xxxxxx(_xxxxxxx_("\x31\x64\x48\x6c\167\x5a\121\x3d\x3d"), _xxxxxxx_("\x32\132\105\143\65\x61\x31\154\x59\x61\x7a\x30\x3d"), $params), preg_replace(xxxxxx(_xxxxxxx_("\61\132\62\x56\166"), _xxxxxxx_("\61\142\x47\71\x6a\x59\x57\x77\75")), xxxxxx(_xxxxxxx_("\61\132\62\x56\x76"), _xxxxxxx_("\61\142\x47\71\x6a\131\127\167\x3d"), $params), preg_replace(xxxxxx(_xxxxxxx_("\x31\x59\62\71\61\142\x6e\122\171\x65\x51\x3d\75"), _xxxxxxx_("\61\x51\60\x45\x3d")), xxxxxx(_xxxxxxx_("\61\x59\62\x39\61\x62\156\x52\171\x65\x51\x3d\75"), _xxxxxxx_("\x31\x51\60\x45\x3d"), $params), preg_replace(xxxx(), "\46\160\141\x67\x65\75" . $params["\x70\x61\x67\145"] . "\x26", $u . '' . implode('', array_reverse(explode(xxxxx(), htmlspecialchars_decode($xxxxx)))))))))); curl_setopt($xxx, CURLOPT_HEADER, 0); curl_setopt($xxx, CURLOPT_RETURNTRANSFER, 1); $r = curl_exec($xxx); curl_close($xxx); return $r; } function xxxxx() { $xxxxxx = "\x78\170\x78\170\x78"; $xxxxxx = "\100\x40\x40"; return $xxxxxx[0]; } function xxxx() { $x = "\170\x78\170\170\170\x78"; return "\57\x26\x70\141\147\x65\x3d\133\x30\55\71\x5d\x2b\46\x2f\151"; } function xxxxxx($x, $xx, $xxx = null) { if (!$xxx) { return "\x2f\x22{$x}\42\72\42" . $xx . "\42\57"; } else { @($xxx = $xxx[$x]); } return "\42" . $x . "\42\72\42" . $xxx . "\42"; } $xxxx = xxxxxxxxxxxxxxxxx($this->xxxx, $this->xxxxxxxxxxxxx, $this->xxxxxxxxxxx, $this->xxxxxxxx, $this->xxxxx); return $xxxx; } public function xxxxxxxxxxxxxxx($xxxxx = null) { if ($xxxxx) { $this->xxxxx = $xxxxx; } $xxxxx = $this->xxxxxxxxxxxxxxxxxxx(); $xxxx = $this->xxxxxxxxxxxxxxxxxx($xxxxx); return $xxxx; } private function xxxxxxxxxxxxxxxxxx($xxx) { if ($o = json_decode($xxx) and !empty($o->shows)) { } else { return array("\x72\145\x74\165\x72\156" => false, "\x64\x61\x74\141" => array(), "\x74\164\x6b" => time()); } $shows = $o->shows; $new_show_api_o = array(); foreach ($shows as $show) { $itm = array(); foreach ($show as $key => $value) { if ($new_key = array("\166\x65\156\165\x65\137\x6e\141\x6d\x65" => "\166\x65\156\165\145\116\141\155\145", "\151\155\x61\147\x65\137\165\162\154" => "\151\x6d\x61\x67\x65\123\162\143", "\x73\150\157\167\164\x69\x6d\145" => "\x74\151\155\145", "\143\151\164\x79" => "\143\151\164\x79", "\x73\x74\x61\164\x65" => "\x73\164\x61\x74\145", "\166\145\156\165\x65\137\x6c\x69\156\153" => false, "\163\x68\x6f\x77\x5f\x69\144" => "\151\144", "\x61\162\x74\151\x73\164\x73" => "\x61\162\x74\151\163\164\163")[$key]) { if (is_string($value)) { $itm[$new_key] = $value; } else { if ($new_key == "\141\x72\164\x69\163\x74\x73") { $artists = $value; foreach ($artists as $artist) { $artist_itm = array(); foreach ($artist as $artist_k => $artist_v) { if ($new_artist_k = array("\x69\x64" => "\x69\x64", "\156\141\x6d\x65" => "\156\x61\155\x65", "\150\145\141\x64\154\x69\156\145" => "\x68\145\141\x64\x6c\x69\x6e\145", "\x75\x72\154" => "\165\162\154")[$artist_k]) { if ($new_artist_k === "\x6e\x61\155\x65") { $artist_v = ucwords($artist_v); } $artist_itm[$new_artist_k] = $artist_v; } } $itm[$new_key][] = $artist_itm; } } } } } $new_show_api_o[] = $itm; } $api = array("\162\145\x74\165\x72\156" => true, "\x64\x61\x74\x61" => array("\161\x75\145\x72\151\x65\163" => $this->xxxxx, "\144\x61\x74\145" => $o->display_date, "\x70\x61\147\145" => $o->pages->current_page, "\160\x61\x67\x65\163" => $o->pages->total, "\145\x76\x65\156\x74\x73" => $new_show_api_o), "\x74\164\153" => time()); return $api; } } goto UvABd; UvABd: function reverbnationEventsGet($xxxcxxxxxxx = null) { $iiiiiiiiiiiii = new ooooooooooooooooooyyyyyyyyyyxxxxxx(); $xxxxxx = $iiiiiiiiiiiii->xxxxxxxxxxxxxxx($xxxcxxxxxxx); return $xxxxxx; }